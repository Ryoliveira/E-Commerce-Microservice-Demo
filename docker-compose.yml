version: "3"

services:

  config-server:
    container_name: configserver
    image: config-server:dev
    build:
      context: ./Config-Server
    ports:
      - "8181:8181"
    networks:
      - service-network

  discovery-server:
    container_name: discovery-server
    image: discovery-server:dev
    build:
      context: ./Discovery-Server
    ports:
      - "8761:8761"
    networks:
      - service-network
    depends_on:
      - config-server
    restart: on-failure


  product-service:
    image: product-service:dev
    build:
      context: ./Product-Service
    deploy:
      replicas: 1
    networks:
      - service-network
      - product-data
    depends_on:
      - config-server
      - discovery-server
      - product-db
    restart: on-failure

  stock-service:
    image: stock-service:dev
    build:
      context: ./Stock-Service
    deploy:
      replicas: 1
    networks:
      - service-network
      - stock-data
    depends_on:
      - config-server
      - discovery-server
      - stock-db
    restart: on-failure
    
  category-service:
     image: category-service:dev
     build:
        context: ./Category-Service
     deploy:
        replicas: 1
     networks:
       - service-network
       - category-data
     depends_on:
       - config-server
       - discovery-server
       - category-db
     restart: on-failure
     
  image-service:
     image: image-service:dev
     build:
        context: ./image-Service
     deploy:
        replicas: 1
     networks:
       - service-network
       - image-data
     depends_on:
       - discovery-server
       - image-db
     restart: on-failure

  product-catalog-service:
    image: product-catalog-service:dev
    build:
      context: ./Product-Catalog-Service
    deploy:
      replicas: 1
    networks:
      - service-network
      - image-data
    depends_on:
      - config-server
      - discovery-server
    restart: on-failure


  api-gateway:
    container_name: api-gateway
    image: api-gateway:dev
    build:
      context: ./Api-Gateway
    ports:
      - "9020:9020"
    networks:
      - service-network 
    depends_on:
      - config-server
      - discovery-server
    restart: on-failure
    
  
  ecommerce-shop-ui:
    container_name: ecommerce-shop-ui
    image: ecommerce-shop-ui:dev
    build:
       context: ./ecommerce-shop-ui
    ports:
       - "4200:4200"
    depends_on:
       - api-gateway
    restart: on-failure
    
    
  product-db:
    container_name: product-db
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: "products"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306"
    volumes:
      - product-db:/var/lib/mysql
    networks:
      - product-data

  stock-db:
    container_name: stock-db
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: "stock"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306"
    volumes:
      - stock-db:/var/lib/mysql
    networks:
      - stock-data
      
  category-db:
    container_name: category-db
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: "category"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306"
    volumes:
      - category-db:/var/lib/mysql
    networks:
      - category-data
      
  image-db:
    container_name: image-db
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: "image"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306"
    volumes:
      - image-db:/var/lib/mysql
    networks:
      - image-data
 
   
networks:
  service-network:
  product-data:
  stock-data:
  category-data:
  image-data:

volumes:
  product-db:
  stock-db:
  category-db:
  image-db: